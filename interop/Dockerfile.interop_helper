# Copyright (c) 2024 Cloudflare, Inc. All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause

# Prepare dependencies common to both services.
#
# NOTE: We must use debian (bookworm). We cannot use alpine because building
# the service proxy requires OpenSSL, which is not compatible with the musl
# target required by alpine.
FROM rust:1.76-bookworm AS build-deps-common
RUN apt update && apt install -y capnproto clang
RUN capnp --version

# Prepare dependencies for building the storage proxy.
FROM build-deps-common AS build-deps-storage-proxy
RUN rustup target add wasm32-unknown-unknown
RUN cargo install --git https://github.com/cloudflare/workers-rs

# Build the service.
FROM build-deps-common AS builder-service
WORKDIR /build
COPY Cargo.toml Cargo.lock /build/
COPY crates/daphne /build/crates/daphne
COPY crates/daphne_server /build/crates/daphne_server
COPY crates/daphne_service_utils /build/crates/daphne_service_utils
RUN cargo build --example service --features test-utils --release

# Build the storage proxy.
FROM build-deps-storage-proxy AS builder-storage-proxy
WORKDIR /build
COPY Cargo.toml Cargo.lock /build/
COPY crates/daphne /build/crates/daphne
COPY crates/daphne_service_utils /build/crates/daphne_service_utils
COPY crates/daphne_worker /build/crates/daphne_worker
COPY crates/daphne_worker_test /build/crates/daphne_worker_test
WORKDIR /build/crates/daphne_worker_test
RUN worker-build --dev

# Prepare the environment in which the service and storage proxy will run.
FROM node:bookworm AS final
RUN apt update && apt install -y colorized-logs
RUN npm install -g wrangler@3.50.0 && npm cache clean --force
COPY --from=builder-service /build/target/release/examples/service /
COPY --from=builder-storage-proxy /build/crates/daphne_worker_test/build /build
COPY crates/daphne_worker_test/wrangler.storage_proxy.toml /
COPY crates/daphne_server/examples/configuration-helper.toml /
COPY interop/run_interop_helper.sh /
WORKDIR /
RUN wrangler deploy --dry-run -c wrangler.storage_proxy.toml

# Expose the port for the service. The test runner does not need direct access
# to the storage proxy.
EXPOSE 8788
ENTRYPOINT ["/bin/bash", "/run_interop_helper.sh"]
